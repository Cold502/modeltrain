
=== 刷新模型请求 2025-06-28 17:27:06.057577 ===
endpoint: 'http://192.168.2.200/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 24

=== 刷新模型请求 2025-06-28 17:30:47.172355 ===
endpoint: 'http://192.168.2.200:9000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 29

=== 刷新模型请求 2025-06-28 17:32:09.417249 ===
endpoint: 'http://192.168.2.200:9000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 29

=== 刷新模型请求 2025-06-28 17:33:57.777006 ===
endpoint: 'http://192.168.2.200:9000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 29
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://192.168.2.200:9000/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://192.168.2.200:9000/v1/'
  清理后endpoint: 'http://192.168.2.200:9000/v1'
  是否以/v1结尾: True
  最终URL: 'http://192.168.2.200:9000/v1/models'
fetch_models_from_api 返回了 1 个模型

=== 刷新模型请求 2025-06-28 17:34:09.408040 ===
endpoint: 'http://192.168.2.200:9000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 29
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://192.168.2.200:9000/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://192.168.2.200:9000/v1/'
  清理后endpoint: 'http://192.168.2.200:9000/v1'
  是否以/v1结尾: True
  最终URL: 'http://192.168.2.200:9000/v1/models'
fetch_models_from_api 返回了 1 个模型

=== 刷新模型请求 2025-06-28 18:31:11.383351 ===
endpoint: 'http://192.168.2.200:9000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 29
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://192.168.2.200:9000/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://192.168.2.200:9000/v1/'
  清理后endpoint: 'http://192.168.2.200:9000/v1'
  是否以/v1结尾: True
  最终URL: 'http://192.168.2.200:9000/v1/models'
fetch_models_from_api 返回了 1 个模型

=== 刷新模型请求 2025-06-28 18:33:54.670097 ===
endpoint: 'http://192.168.2.200/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 24
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://192.168.2.200/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://192.168.2.200/v1/'
  清理后endpoint: 'http://192.168.2.200/v1'
  是否以/v1结尾: True
  最终URL: 'http://192.168.2.200/v1/models'
连接错误详情:
  错误类型: ConnectError
  错误信息: All connection attempts failed
  尝试连接的URL: http://192.168.2.200/v1/models

=== 刷新模型请求 2025-06-28 18:34:05.723588 ===
endpoint: 'http://192.168.2.200:9000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 29
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://192.168.2.200:9000/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://192.168.2.200:9000/v1/'
  清理后endpoint: 'http://192.168.2.200:9000/v1'
  是否以/v1结尾: True
  最终URL: 'http://192.168.2.200:9000/v1/models'
fetch_models_from_api 返回了 1 个模型

=== 刷新模型请求 2025-06-28 18:36:39.386875 ===
endpoint: 'http://192.168.2.200:9000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 29
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://192.168.2.200:9000/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://192.168.2.200:9000/v1/'
  清理后endpoint: 'http://192.168.2.200:9000/v1'
  是否以/v1结尾: True
  最终URL: 'http://192.168.2.200:9000/v1/models'
fetch_models_from_api 返回了 1 个模型

=== 刷新模型请求 2025-06-28 18:38:18.215400 ===
endpoint: 'http://127.0.0.1:8000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 25
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://127.0.0.1:8000/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://127.0.0.1:8000/v1/'
  清理后endpoint: 'http://127.0.0.1:8000/v1'
  是否以/v1结尾: True
  最终URL: 'http://127.0.0.1:8000/v1/models'

=== 刷新模型请求 2025-06-28 18:38:29.033304 ===
endpoint: 'http://192.168.2.200:9000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 29
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://192.168.2.200:9000/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://192.168.2.200:9000/v1/'
  清理后endpoint: 'http://192.168.2.200:9000/v1'
  是否以/v1结尾: True
  最终URL: 'http://192.168.2.200:9000/v1/models'
fetch_models_from_api 返回了 1 个模型

=== 刷新模型请求 2025-06-28 18:44:09.864996 ===
endpoint: 'http://192.168.2.200/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 24
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://192.168.2.200/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://192.168.2.200/v1/'
  清理后endpoint: 'http://192.168.2.200/v1'
  是否以/v1结尾: True
  最终URL: 'http://192.168.2.200/v1/models'
连接错误详情:
  错误类型: ConnectError
  错误信息: All connection attempts failed
  尝试连接的URL: http://192.168.2.200/v1/models

=== 刷新模型请求 2025-06-28 18:44:14.931521 ===
endpoint: 'http://192.168.2.200:9000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 29
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://192.168.2.200:9000/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://192.168.2.200:9000/v1/'
  清理后endpoint: 'http://192.168.2.200:9000/v1'
  是否以/v1结尾: True
  最终URL: 'http://192.168.2.200:9000/v1/models'
fetch_models_from_api 返回了 1 个模型

=== 刷新模型请求 2025-06-28 18:46:45.086854 ===
endpoint: 'http://192.168.2.200:9000/v1/'
provider_id: 'vllm'
api_key: None
endpoint类型: <class 'str'>
endpoint长度: 29
进入try块，准备处理请求...
开始调用 fetch_models_from_api...
fetch_models_from_api 函数开始执行
  参数: endpoint='http://192.168.2.200:9000/v1/', provider_id='vllm'
URL构建详情:
  原始endpoint: 'http://192.168.2.200:9000/v1/'
  清理后endpoint: 'http://192.168.2.200:9000/v1'
  是否以/v1结尾: True
  最终URL: 'http://192.168.2.200:9000/v1/models'
fetch_models_from_api 返回了 1 个模型
